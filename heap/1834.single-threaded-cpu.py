#
# @lc app=leetcode id=1834 lang=python3
#
# [1834] Single-Threaded CPU
#

from typing import List
from heapq import heappush, heappop

class Task:
    def __init__(self, start: int, proctime: int, index: int):
        self.start = start
        self.proctime = proctime
        self.index = index
    
    def __lt__(self, other):
        if self.proctime < other.proctime:
            return True
        if self.proctime == other.proctime and self.index < other.index:
            return True
        return False

class Item:
    '''same attibute as Task, but the __lt__ is different
    '''
    def __init__(self, start: int, proctime: int, index: int):
        self.start = start
        self.proctime = proctime
        self.index = index
    
    def __lt__(self, other):
        if self.start < other.start:
            return True
        if self.start == other.start and self.proctime < other.proctime:
            return True
        if self.start == other.start and self.proctime == other.proctime and self.index < other.index:
            return True
        return False


# @lc code=start
class Solution:
    def getOrder(self, tasks: List[List[int]]) -> List[int]:
        items = [Item(start, proctime, i) for i, (start, proctime) in enumerate(tasks)]
        items.sort()
        cur = items[0]     # the current task in CPU
        clock = cur.start  # the CPU clock
        ans = [items[0].index]
        h = []

        i = 1
        while i < len(items):
            item = items[i]
            start = item.start
            cur_finish = clock + cur.proctime if cur else clock
            if cur_finish >= start:
                task = Task(item.start, item.proctime, item.index)
                heappush(h, task)
                i += 1
                continue
            if h:
                task = heappop(h)
                ans.append(task.index)
                cur = task
                clock = cur_finish
                cur_finish = clock + cur.proctime
            else:
                clock = start
                cur = None

        while h:
            task = heappop(h)
            ans.append(task.index)

        return ans


# tasks = [[1,2],[2,4],[3,2],[4,1]]
# tasks = [[7,10],[7,12],[7,5],[7,4],[7,2]]
# tasks = [[19,13],[16,9],[21,10],[32,25],[37,4],[49,24],[2,15],[38,41],[37,34],[33,6],[45,4],[18,18],[46,39],[12,24]]
# tasks = [[32,474],[32,884],[32,981],[32,309],[32,131],[32,820],[32,678],[843,832],[843,774],[843,82],[843,387],[843,963],[843,455],[843,970],[843,24],[300,435],[300,748],[300,253],[300,283],[300,254],[300,909],[300,65],[300,744],[300,919],[300,337],[219,740],[219,559],[219,325],[219,581],[219,967],[219,164],[219,56],[219,930],[469,862],[469,581],[469,982],[469,231],[469,534],[469,595],[469,480],[469,15],[469,546],[299,252],[299,49],[299,650],[299,975],[299,79],[979,232],[979,610],[979,415],[979,532],[979,579],[979,244],[979,778],[979,292],[206,970],[206,607],[206,64],[206,12],[206,399],[206,702],[206,445],[590,682],[590,835],[590,534],[590,796],[960,475],[353,760],[353,837],[353,163],[952,360],[952,946],[952,798],[952,541],[952,51],[752,187],[752,984],[752,733],[752,116],[752,395],[752,915],[752,648],[752,159],[420,778],[420,669],[420,734],[420,549],[708,425],[708,675],[708,119],[708,901],[708,500],[665,872],[665,438],[321,402],[321,899],[321,629],[321,433],[321,886],[650,39],[650,859],[650,33],[650,883],[650,719],[650,227],[650,1],[650,199],[650,141],[895,631],[895,110],[895,333],[895,381],[895,446],[895,33],[895,728],[895,664],[895,340],[83,881],[83,397],[83,985],[83,492],[83,80],[944,226],[944,400],[659,741],[659,346],[659,490],[659,700],[659,136],[751,793],[751,187],[751,461],[21,715],[21,490],[21,154],[21,514],[21,350],[21,297],[21,139],[21,665],[21,533],[635,680],[635,461],[635,668],[635,306],[635,902],[635,556],[635,798],[635,943],[635,451],[879,729],[29,594],[29,174],[29,457],[29,949],[29,79],[29,924],[29,177],[29,869],[20,997],[20,806],[20,587],[20,127],[20,811],[20,3],[20,127],[20,186],[20,12],[20,937],[517,356],[517,776],[517,328],[517,7],[517,393],[526,724],[526,249],[526,120],[526,168],[884,527],[884,663],[884,480],[884,109],[884,823],[884,313],[884,587],[884,61],[743,89],[743,386],[743,599],[743,610],[706,719],[706,46],[706,760],[706,947],[706,7],[706,629],[706,544],[706,339],[414,75],[414,256],[347,442],[347,601],[347,581],[813,599],[813,105],[813,860],[813,40],[908,881],[908,571],[908,122],[908,650],[908,105],[908,342],[908,352],[908,908],[666,40],[666,986],[666,999],[666,698],[666,898],[666,793],[666,821],[666,308],[666,57],[666,371],[175,900],[175,986],[175,806],[175,743],[175,242],[175,674],[800,116],[800,56],[800,224],[800,258],[800,282],[469,738],[469,624],[469,347],[971,595],[971,306],[971,989],[971,808],[971,405],[461,495],[461,247],[461,277],[461,846],[461,837],[461,970],[461,217],[461,500],[461,550],[278,271],[278,119],[278,632],[278,878],[278,252],[278,551],[278,232],[278,863],[173,100],[173,728],[173,227],[173,779],[173,678],[173,575],[406,47],[406,563],[406,40],[406,511],[406,99],[406,66],[406,379],[857,720],[857,956],[857,410],[857,440],[857,714],[857,384],[857,53],[31,831],[31,126],[31,608],[31,914],[31,543],[31,500],[451,502],[451,119],[451,85],[519,551],[684,225],[684,143],[684,975],[684,346],[684,105],[684,7],[684,905],[534,740],[534,991],[534,478],[534,676],[534,197],[534,857],[534,288],[534,766],[534,403],[534,472],[89,179],[89,381],[89,624],[89,104],[89,148],[89,835],[89,174],[89,495],[492,75],[492,521],[492,920],[492,703],[492,286],[492,375],[492,227],[492,430],[492,711],[492,443],[962,685],[962,896],[962,830],[416,247],[743,837],[743,239],[743,794],[66,66],[66,239],[66,510],[66,673],[66,93],[66,120],[66,462],[66,956],[66,223],[66,864],[461,8],[461,590],[461,562],[983,863],[983,268],[983,624],[983,220],[983,794],[983,408],[983,903],[983,364],[175,695],[175,137],[175,137],[175,219],[175,812],[175,74],[59,754],[59,380],[59,260],[59,409],[59,180],[59,654],[20,79],[20,870],[20,829],[20,760],[20,596],[20,703],[20,781],[20,897],[550,436],[550,827],[550,448],[550,825],[550,499],[550,366],[109,431],[109,162],[109,954],[109,70],[109,105],[109,263],[109,189],[328,404],[328,873],[328,314],[328,176],[328,407],[328,638],[328,474],[328,545],[590,156],[590,286],[590,353],[590,913],[590,509],[590,92],[590,485],[590,237],[789,79],[9,857],[9,387],[9,718],[9,756],[9,449],[9,755],[9,914],[9,210],[9,580],[9,229],[846,929],[846,206],[846,433],[846,985],[846,144],[846,314],[846,395],[846,719],[846,547],[846,474],[545,174],[545,821],[545,38],[545,58],[545,84],[545,118],[545,954],[545,497],[357,321],[357,393],[357,939],[357,956],[357,341],[357,673],[357,992],[357,196],[516,89],[726,299],[726,460],[726,942],[726,974],[726,796],[8,246],[8,469],[8,579],[8,482],[8,152],[320,116],[320,752],[320,439],[320,938],[320,635],[320,914],[320,876],[320,671],[234,241],[900,83],[900,88],[900,936],[900,653],[900,534],[900,175],[900,422],[900,462],[900,575],[678,131],[678,886],[678,851],[286,938],[286,179],[286,991],[286,446],[286,267],[286,53],[286,174],[286,617],[286,823],[286,941],[255,524],[255,781],[57,38],[57,796],[57,843],[867,7],[867,588],[867,387],[867,238],[867,593],[703,624],[703,442],[703,696],[703,733],[703,962],[703,756],[703,613],[703,668],[703,468],[827,462],[827,454],[827,418],[827,708],[827,707],[972,317],[972,158],[972,901],[972,829],[972,89],[638,361],[638,765],[638,513],[638,159],[746,862],[746,43],[746,250],[746,648],[746,859],[746,1],[746,4],[940,690],[940,832],[940,499],[940,370],[940,901],[940,831],[940,422],[940,366],[659,449],[659,92],[659,803],[659,784],[659,699],[659,28],[659,640],[659,287],[563,275],[563,649],[563,277],[563,259],[563,441],[563,435],[563,765],[563,753],[563,630],[563,40],[689,919],[689,441],[689,108],[190,720],[190,91],[190,407],[190,440],[190,395],[486,46],[486,22],[486,950],[486,803],[486,876],[486,303],[486,506],[486,410],[486,188],[776,185],[776,804],[776,386],[776,840],[776,507],[776,2],[776,126],[425,726],[425,799],[425,891],[657,219],[657,755],[657,163],[657,595],[657,791],[657,649],[657,88],[657,191],[205,243],[205,22],[205,350],[205,583],[205,276],[205,886],[205,116],[205,86],[205,408],[537,60],[537,353],[537,888],[537,729],[537,88],[537,406],[537,432],[537,426],[537,630],[537,750],[133,276],[133,215],[133,106],[516,671],[516,771],[516,18],[516,939],[516,800],[427,262],[427,5],[427,218],[427,47],[427,299],[86,916],[584,998],[584,189],[584,582],[584,517],[584,424],[584,105],[696,647],[696,493],[696,598],[696,497],[696,599],[696,556],[696,890],[552,607],[552,543],[552,754],[552,47],[552,669],[552,567],[552,290],[552,524],[552,872],[552,403],[412,403],[412,204],[412,814],[412,250],[412,121],[208,218],[208,492],[208,180],[208,622],[911,277],[911,623],[911,570],[911,215],[911,330],[911,182],[911,796],[911,68],[911,650],[671,588],[794,947],[794,240],[794,361],[794,811],[794,569],[794,508]]
# print('113', tasks[113])
# print('516', tasks[516])
tasks = [[5,2],[7,2],[9,4],[6,3],[5,10],[1,1]]
s = Solution()
print(s.getOrder(tasks))

# @lc code=end

